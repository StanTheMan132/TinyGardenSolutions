// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qYXJkyifyxfQuqtTDFQCRa
// Component: Yaa7Qx0AtX
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: klxX5nKFAD/component
import Button2 from "../../Button2"; // plasmic-import: VS4Cm-DCBjr/component
import Footer from "../../Footer"; // plasmic-import: cdtIcE32qk/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic_tiny_garden_solutions.module.css"; // plasmic-import: qYXJkyifyxfQuqtTDFQCRa/projectcss
import sty from "./PlasmicPricingSaas.module.css"; // plasmic-import: Yaa7Qx0AtX/css
import Icon7Icon from "./icons/PlasmicIcon__Icon7"; // plasmic-import: 6UpumiS197R/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: K_9f4twbCGN/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: 6jcESFctCjp/icon

export const PlasmicPricingSaas__VariantProps = new Array();

export const PlasmicPricingSaas__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicPricingSaas__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__y0CB)}>
            <div className={classNames(projectcss.all, sty.freeBox__sWPbn)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__nU3Nn)}
              >
                <Navbar
                  data-plasmic-name={"navbar"}
                  data-plasmic-override={overrides.navbar}
                  className={classNames("__wab_instance", sty.navbar)}
                />
              </p.Stack>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox___1RNHk)}>
            <div className={classNames(projectcss.all, sty.freeBox__iiSmw)}>
              <div className={classNames(projectcss.all, sty.freeBox__hqdso)} />
              <p.Stack
                as={"div"}
                data-plasmic-name={"foreground"}
                data-plasmic-override={overrides.foreground}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__svsId)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___261Rb)}
                  >
                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {"Pricing plans"}
                    </h1>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hOuW6
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__sggJz)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__rlkM1)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__szpgz)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ao5Vt
                        )}
                      >
                        {"Tiny Garden Mini"}
                      </div>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__a29Le
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___82Jb
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dklxT
                            )}
                          >
                            {"â‚¬"}
                          </div>
                          <h2
                            className={classNames(
                              projectcss.all,
                              projectcss.h2,
                              projectcss.__wab_text,
                              sty.h2___0Cfew
                            )}
                          >
                            {"375"}
                          </h2>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___0OqwU
                          )}
                        >
                          {""}
                        </div>
                      </p.Stack>
                    </p.Stack>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___7KAnw
                      )}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___941Yf
                      )}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__b3XE
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yie81
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__phhSk
                            )}
                          >
                            <Icon7Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ozZfJ
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__bqZbt
                              )}
                            >
                              <Icon7Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___979ZV
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__b7Bj2
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___49UL
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qgf29
                              )}
                            >
                              {"Fits everywhere"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__iuY2
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__doLs4
                            )}
                          >
                            <Icon7Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zYj3E
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__qfThy
                              )}
                            >
                              <Icon7Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__s5Fuf
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__m3F0V
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__tKbpK
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__iz6Xv
                              )}
                            >
                              {"Yields 20-30 grams"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___6N0W4
                          )}
                        >
                          <Button2
                            className={classNames(
                              "__wab_instance",
                              sty.button2___9BwDh
                            )}
                            endIcon={
                              <Icon6Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__f6NIa
                                )}
                                role={"img"}
                              />
                            }
                            showEndIcon={true}
                            startIcon={
                              <ChecksvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__h1IxQ
                                )}
                                role={"img"}
                              />
                            }
                            submitsForm={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__gKn1X
                              )}
                            >
                              {"Buw now"}
                            </div>
                          </Button2>
                        </div>
                      ) : null}
                    </p.Stack>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7ItH)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__hcDl9)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mZmr
                        )}
                      >
                        {"TIny Garden Pro"}
                      </div>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__l1Dne
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rjQcB
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wjKt0
                            )}
                          >
                            {"â‚¬"}
                          </div>
                          <h2
                            className={classNames(
                              projectcss.all,
                              projectcss.h2,
                              projectcss.__wab_text,
                              sty.h2__nb3Ii
                            )}
                          >
                            {"599"}
                          </h2>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eC0Nt
                          )}
                        >
                          {""}
                        </div>
                      </p.Stack>
                    </p.Stack>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__jn1It)}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___4JtP2
                      )}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__uThSu
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mubtx
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__xpZwz
                            )}
                          >
                            <Icon7Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___7IKwi
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___6Fbag
                              )}
                            >
                              <Icon7Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__u9KhV
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cKu6V
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__nswpS
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__n1PmB
                              )}
                            >
                              {"For the high user"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rhcmG
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__psKld
                            )}
                          >
                            <Icon7Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__fdOU
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___1QgUh
                              )}
                            >
                              <Icon7Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__zIAyj
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___68Ley
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__nd1W6
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__k24Ss
                              )}
                            >
                              {"Yields 50-200 grams"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yye0O
                          )}
                        >
                          <Button2
                            className={classNames(
                              "__wab_instance",
                              sty.button2__pec48
                            )}
                            endIcon={
                              <Icon6Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__j2Z4
                                )}
                                role={"img"}
                              />
                            }
                            showEndIcon={true}
                            startIcon={
                              <ChecksvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__o2Fh9
                                )}
                                role={"img"}
                              />
                            }
                            submitsForm={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__isRtg
                              )}
                            >
                              {"Buy now"}
                            </div>
                          </Button2>
                        </div>
                      ) : null}
                    </p.Stack>
                  </div>
                </p.Stack>
              </p.Stack>
            </div>
          </div>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "navbar", "foreground", "h1", "footer"],
  navbar: ["navbar"],
  foreground: ["foreground", "h1"],
  h1: ["h1"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicPricingSaas__ArgProps,
          internalVariantPropNames: PlasmicPricingSaas__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPricingSaas__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPricingSaas";
  } else {
    func.displayName = `PlasmicPricingSaas.${nodeName}`;
  }
  return func;
}

export const PlasmicPricingSaas = Object.assign(
  // Top-level PlasmicPricingSaas renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    foreground: makeNodeComponent("foreground"),
    h1: makeNodeComponent("h1"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicPricingSaas
    internalVariantProps: PlasmicPricingSaas__VariantProps,
    internalArgProps: PlasmicPricingSaas__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicPricingSaas;
/* prettier-ignore-end */
